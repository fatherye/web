<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sp.dao.CommentMapper">
  <resultMap id="BaseResultMap" type="sp.beans.Comment">
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="comment_statement" jdbcType="INTEGER" property="commentStatement" />
    <result column="text_id" jdbcType="INTEGER" property="textId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="comment_date" jdbcType="TIMESTAMP" property="commentDate" />
    <association property="userWithBLOBs" javaType="sp.beans.UserWithBLOBs">
        <id column="user_id" jdbcType="INTEGER" property="userId" />
        <result column="user_account" jdbcType="VARCHAR" property="userAccount"/>
        <result column="user_image" jdbcType="LONGVARCHAR" property="userImage" />
    
    </association>
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="sp.beans.Comment">
    <result column="comment_context" jdbcType="LONGVARCHAR" property="commentContext" />
  </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    comment_id, comment_statement, text_id, user_id, comment_date
  </sql>
  <sql id="Blob_Column_List">
    comment_context
  </sql>
  <sql id="withUserBase_Column_List"> c.comment_id, c.comment_statement, c.text_id, c.user_id, c.comment_date,u.user_id,u.user_account</sql>
  <sql id="withUserBlob_Column_List">c.comment_context,u.user_image</sql>
  <!-- List<Comment> selectByExampleWithBLOBsandUser(CommentExample example);
    Comment selectByPrimaryKeywithuser(Integer commentId); -->
  <select id="selectByExampleWithBLOBsandUser" parameterType="sp.beans.CommentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="withUserBase_Column_List" />
    ,
    <include refid="withUserBlob_Column_List" />
    FROM COMMENT c LEFT JOIN USER u ON c.`user_id`=u.`user_id`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithBLOBs" parameterType="sp.beans.CommentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="sp.beans.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="sp.beans.CommentExample">
    delete from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="sp.beans.Comment">
    insert into comment (comment_id, comment_statement, text_id, 
      user_id, comment_date, comment_context
      )
    values (#{commentId,jdbcType=INTEGER}, #{commentStatement,jdbcType=INTEGER}, #{textId,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{commentDate,jdbcType=TIMESTAMP}, #{commentContext,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="sp.beans.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="commentStatement != null">
        comment_statement,
      </if>
      <if test="textId != null">
        text_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="commentDate != null">
        comment_date,
      </if>
      <if test="commentContext != null">
        comment_context,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="commentStatement != null">
        #{commentStatement,jdbcType=INTEGER},
      </if>
      <if test="textId != null">
        #{textId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="commentDate != null">
        #{commentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="commentContext != null">
        #{commentContext,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="sp.beans.CommentExample" resultType="java.lang.Long">
    select count(*) from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update comment
    <set>
      <if test="record.commentId != null">
        comment_id = #{record.commentId,jdbcType=INTEGER},
      </if>
      <if test="record.commentStatement != null">
        comment_statement = #{record.commentStatement,jdbcType=INTEGER},
      </if>
      <if test="record.textId != null">
        text_id = #{record.textId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.commentDate != null">
        comment_date = #{record.commentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.commentContext != null">
        comment_context = #{record.commentContext,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update comment
    set comment_id = #{record.commentId,jdbcType=INTEGER},
      comment_statement = #{record.commentStatement,jdbcType=INTEGER},
      text_id = #{record.textId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      comment_date = #{record.commentDate,jdbcType=TIMESTAMP},
      comment_context = #{record.commentContext,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comment
    set comment_id = #{record.commentId,jdbcType=INTEGER},
      comment_statement = #{record.commentStatement,jdbcType=INTEGER},
      text_id = #{record.textId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      comment_date = #{record.commentDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="sp.beans.Comment">
    update comment
    <set>
      <if test="commentStatement != null">
        comment_statement = #{commentStatement,jdbcType=INTEGER},
      </if>
      <if test="textId != null">
        text_id = #{textId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="commentDate != null">
        comment_date = #{commentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="commentContext != null">
        comment_context = #{commentContext,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="sp.beans.Comment">
    update comment
    set comment_statement = #{commentStatement,jdbcType=INTEGER},
      text_id = #{textId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      comment_date = #{commentDate,jdbcType=TIMESTAMP},
      comment_context = #{commentContext,jdbcType=LONGVARCHAR}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="sp.beans.Comment">
    update comment
    set comment_statement = #{commentStatement,jdbcType=INTEGER},
      text_id = #{textId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      comment_date = #{commentDate,jdbcType=TIMESTAMP}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
</mapper>