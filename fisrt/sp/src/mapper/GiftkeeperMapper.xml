<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sp.dao.GiftkeeperMapper">
  <resultMap id="BaseResultMap" type="sp.beans.Giftkeeper">
    <id column="gift_id" jdbcType="INTEGER" property="giftId" />
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="gift_number" jdbcType="INTEGER" property="giftNumber" />
    <association property="gift" javaType="sp.beans.Gift">
    <id column="gift_id" jdbcType="INTEGER" property="giftId" />
    <result column="gift_name" jdbcType="VARCHAR" property="giftName" />
    <result column="gift_grade" jdbcType="INTEGER" property="giftGrade" />
    <result column="gift_image" jdbcType="LONGVARCHAR" property="giftImage" />
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    gift_id, user_id, gift_number
  </sql>
  <sql id="GiftBase_Column_List">
    k.gift_id, k.user_id, k.gift_number,g.gift_id,g.gift_grade,g.gift_name,g.gift_image
  </sql>
  <select id="selectByExamplewithGift" parameterType="sp.beans.GiftkeeperExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="GiftBase_Column_List" />
    from giftkeeper k LEFT JOIN gift g ON k.`gift_id`=g.`gift_id`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="sp.beans.GiftkeeperExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from giftkeeper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="sp.beans.GiftkeeperKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from giftkeeper
    where gift_id = #{giftId,jdbcType=INTEGER}
      and user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="sp.beans.GiftkeeperKey">
    delete from giftkeeper
    where gift_id = #{giftId,jdbcType=INTEGER}
      and user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="sp.beans.GiftkeeperExample">
    delete from giftkeeper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="sp.beans.Giftkeeper">
    insert into giftkeeper (gift_id, user_id, gift_number
      )
    values (#{giftId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{giftNumber,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="sp.beans.Giftkeeper">
    insert into giftkeeper
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="giftId != null">
        gift_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="giftNumber != null">
        gift_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="giftId != null">
        #{giftId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="giftNumber != null">
        #{giftNumber,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="sp.beans.GiftkeeperExample" resultType="java.lang.Long">
    select count(*) from giftkeeper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update giftkeeper
    <set>
      <if test="record.giftId != null">
        gift_id = #{record.giftId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.giftNumber != null">
        gift_number = #{record.giftNumber,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update giftkeeper
    set gift_id = #{record.giftId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      gift_number = #{record.giftNumber,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="sp.beans.Giftkeeper">
    update giftkeeper
    <set>
      <if test="giftNumber != null">
        gift_number = #{giftNumber,jdbcType=INTEGER},
      </if>
    </set>
    where gift_id = #{giftId,jdbcType=INTEGER}
      and user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="sp.beans.Giftkeeper">
    update giftkeeper
    set gift_number = #{giftNumber,jdbcType=INTEGER}
    where gift_id = #{giftId,jdbcType=INTEGER}
      and user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>